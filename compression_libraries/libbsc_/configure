#! /bin/bash

VERSION="v3.2.4"
VERSION_FIXED="v3.2.4"
DIRECTORY="libbsc"

RED='\033[0;31m'
YELLOW='\033[0;33m'
GREEN='\033[0;32m'
CYAN='\033[0;36m'
NO_COLOR='\033[0m'

WARNING=0

MESSAGE(){
  echo -ne "${CYAN}\t${1}[${VERSION}]... ${NO_COLOR}"
  if [[ $2 != "" ]]; then
    echo
  fi
}

CHECK(){
  if [[ $? -eq 0 ]]; then
    if [[ $1 == "" ]]; then
      if [[ ${WARNING} == 0 ]]; then
        echo -ne "${GREEN}[SUCCESS]${NO_COLOR}"
      fi
      exit ${WARNING}
    fi
  else
    echo -ne "${RED}[FAIL]${NO_COLOR}"
    exit 2
  fi
}

UPDATE_REPOSITORY() {
  CORRECT_VERSION=$(git status | grep ${VERSION} | wc -l)
  if [[ ${CORRECT_VERSION} -eq 0 ]]; then
    git checkout --force ${VERSION} >> ../../../smash.log 2>&1
  fi
}

WARNING() {
  if [[ ${VERSION} != ${VERSION_FIXED} ]]; then
    WARNING=1
    echo -ne "${YELLOW}[WARNING] Code has been fixed using ${VERSION_FIXED} version${NO_COLOR}"
  fi
}

FIXING_CODE() {
  WARNING
  sed -i "s/bsc_init_full(int features, void.* (.* malloc)(size_t size), void.* (.* zero_malloc)(size_t size), void (.* free)(void.* address))/bsc_init_full(int features)/" libbsc/libbsc.h >> ../../../smash.log 2>&1
  CHECK 0
  sed -i "s/bsc_init_full(int features, void.* (.* malloc)(size_t size), void.* (.* zero_malloc)(size_t size), void (.* free)(void.* address))/bsc_init_full(int features)/" libbsc/libbsc/libbsc.cpp >> ../../../smash.log 2>&1
  CHECK 0
  sed -i "s/bsc_platform_init(features, malloc, zero_malloc, free);/bsc_platform_init(features, NULL, NULL, NULL);/" libbsc/libbsc/libbsc.cpp >> ../../../smash.log 2>&1
  CHECK 0
  sed -i "s/bsc_init_full(features, NULL, NULL, NULL);/bsc_init_full(features);/" libbsc/libbsc/libbsc.cpp >> ../../../smash.log 2>&1
}

MESSAGE "Libbsc"
cd ${DIRECTORY} >> ../../smash.log 2>&1
CHECK 0
UPDATE_REPOSITORY
CHECK 0
FIXING_CODE
CHECK
cd ..